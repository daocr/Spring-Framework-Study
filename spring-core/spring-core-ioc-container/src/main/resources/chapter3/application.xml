<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- 1、   构造器注入-->
    <bean id="dependencyInjectionService" class="com.huilong.chapter3.service.impl.DependencyInjectionServiceImpl">

        <!--        这三种形式是等价的-->

        <!-- 1.1 构造器位置注入-->
        <constructor-arg index="0">
            <value>构造器注入</value>
        </constructor-arg>

        <!-- 1.2 构造器参数类型注入-->
        <!--        <constructor-arg type="java.lang.String">-->
        <!--            <value>构造器注入</value>-->
        <!--        </constructor-arg>-->

        <!-- 1.3 构造器参数名称注入-->
        <!--        <constructor-arg name="desc">-->
        <!--            <value>构造器注入</value>-->
        <!--        </constructor-arg>-->
    </bean>


    <!-- 2、setter 方法注入-->
    <bean id="dependencyInjectionService2" class="com.huilong.chapter3.service.impl.DependencyInjectionServiceImpl">
        <property name="desc">
            <value>setter 方法注入</value>
        </property>
    </bean>

    <bean id="dependencyInjectionService3" class="com.huilong.chapter3.service.impl.DependencyInjectionServiceImpl"
          p:desc="setter 方法注入">
    </bean>

    <!--    2.1 集合数据注入-->

    <bean id="complexObject" class="com.huilong.chapter3.service.impl.ComplexObject" lazy-init="true"
          destroy-method="destroy" init-method="init">
        <property name="adminEmails">
            <props>
                <prop key="administrator">administrator@example.org</prop>
                <prop key="support">support@example.org</prop>
                <prop key="development">development@example.org</prop>
            </props>
        </property>    <!-- results in a setSomeList(java.util.List) call -->
        <property name="someList">
            <list>
                <value>a list element followed by a reference</value>
            </list>
        </property>    <!-- results in a setSomeMap(java.util.Map) call -->
        <property name="someMap">
            <map>
                <entry key="an entry" value="just some string"/>
            </map>
        </property>    <!-- results in a setSomeSet(java.util.Set) call -->
        <property name="someSet">
            <set>
                <value>just some string</value>
            </set>
        </property>
    </bean>


</beans>